version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: voting_postgres
    restart: always
    environment:
      POSTGRES_USER: voting_user
      POSTGRES_PASSWORD: voting_password
      POSTGRES_DB: voting_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U voting_user -d voting_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - voting_network

  redis:
    image: redis:7-alpine
    container_name: voting_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - voting_network

  # Optional: Adminer for database management
  adminer:
    image: adminer:latest
    container_name: voting_adminer
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - voting_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  voting_network:
    driver: bridge
